# Server Configuration
server.port=8080

# NOTE: Do not force any Spring profile here; Render/Vercel env will supply config.
# spring.profiles.active=

# Database Configuration
# Do NOT hardcode DB here. Provide via environment variables in Render:
# SPRING_DATASOURCE_URL, SPRING_DATASOURCE_USERNAME, SPRING_DATASOURCE_PASSWORD, SPRING_DATASOURCE_DRIVER_CLASS_NAME

# JPA Configuration (generic; dialect can be inferred or set via env)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# CORS default localhost; production origins supplied via ALLOWED_ORIGINS env and CorsConfig
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:5174,http://localhost:5175
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging
logging.level.com.moviebooking=DEBUG

# Mail (SMTP) Configuration - set credentials via environment
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true




# RAG Configuration
# Gemini API Key - env only (do not hardcode)
gemini.api.key=${GEMINI_API_KEY}
gemini.embedding.model=text-embedding-004
gemini.chat.model=gemini-1.5-flash

# Pinecone
pinecone.api.key=${PINECONE_API_KEY}
pinecone.host=${PINECONE_HOST:https://movie-sskkne3.svc.aped-4627-b74a.pinecone.io}
pinecone.namespace=${PINECONE_NAMESPACE:reports}
pinecone.dimension=${PINECONE_DIMENSION:768}
