# Server Configuration
server.port=8080

# Database Configuration (Supabase Postgres)
# Provide via env: SUPABASE_DB_HOST, SUPABASE_DB_PORT, SUPABASE_DB_NAME, SUPABASE_DB_USER, SUPABASE_DB_PASSWORD
spring.datasource.url=jdbc:postgresql://${SUPABASE_DB_HOST:db.supabase.co}:${SUPABASE_DB_PORT:5432}/${SUPABASE_DB_NAME:postgres}?sslmode=require
spring.datasource.username=${SUPABASE_DB_USER:postgres}
spring.datasource.password=${SUPABASE_DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:5174,http://localhost:5175
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging
logging.level.com.moviebooking=DEBUG

# Mail (SMTP) Configuration - set credentials via environment or secure config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true




# RAG Configuration
# Gemini API Key - env only (do not hardcode)
gemini.api.key=${GEMINI_API_KEY}
gemini.embedding.model=text-embedding-004
gemini.chat.model=gemini-1.5-flash

# Pinecone
pinecone.api.key=${PINECONE_API_KEY}
pinecone.host=${PINECONE_HOST:https://movie-sskkne3.svc.aped-4627-b74a.pinecone.io}
pinecone.namespace=${PINECONE_NAMESPACE:reports}
pinecone.dimension=${PINECONE_DIMENSION:768}
