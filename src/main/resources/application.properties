# Server Configuration
server.port=8080

# Activate local profile to use hardcoded API keys and MySQL config
spring.profiles.active=local

# Database Configuration (MySQL)
# Provide via env: MYSQL_DB_HOST, MYSQL_DB_PORT, MYSQL_DB_NAME, MYSQL_DB_USER, MYSQL_DB_PASSWORD
spring.datasource.url=jdbc:mysql://${MYSQL_DB_HOST:localhost}:${MYSQL_DB_PORT:3306}/${MYSQL_DB_NAME:movie_ticket_booking}?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=${MYSQL_DB_USER:root}
spring.datasource.password=${MYSQL_DB_PASSWORD:sajidsai}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:5174,http://localhost:5175
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging
logging.level.com.moviebooking=DEBUG

# Mail (SMTP) Configuration - set credentials via environment or secure config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true




# RAG Configuration
# Gemini API Key - env only (do not hardcode)
gemini.api.key=${GEMINI_API_KEY}
gemini.embedding.model=text-embedding-004
gemini.chat.model=gemini-1.5-flash

# Pinecone
pinecone.api.key=${PINECONE_API_KEY}
pinecone.host=${PINECONE_HOST:https://movie-sskkne3.svc.aped-4627-b74a.pinecone.io}
pinecone.namespace=${PINECONE_NAMESPACE:reports}
pinecone.dimension=${PINECONE_DIMENSION:768}
